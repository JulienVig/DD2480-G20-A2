/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.1.1/userguide/tutorial_java_projects.html
 */

plugins {
    // Apply the java plugin to add support for Java
    id 'java'

    // Apply the application plugin to add support for building a CLI application.
    id 'application'
}

test {
    testLogging {
        outputs.upToDateWhen {false}
        showStandardStreams = true
    }
}
repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    mavenCentral()
}

dependencies {
    // This dependency is used by the application.
    implementation 'com.google.guava:guava:28.1-jre'
    implementation "org.eclipse.jgit:org.eclipse.jgit:5.6.0.201912101111-r"
    implementation "org.eclipse.jetty:jetty-ajp:7.0.2.v20100331"
    implementation "javax.servlet:servlet-api:2.5"
    implementation group: 'org.eclipse.jetty', name: 'jetty-client', version: '9.4.26.v20200117'
    implementation group: 'org.eclipse.jetty', name: 'jetty-util', version: '9.4.26.v20200117'
    implementation group: 'org.gradle', name: 'gradle-tooling-api', version: '4.3'
    implementation group: 'org.json', name: 'json', version: '20190722'
    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.hamcrest:hamcrest-library:1.3'
    testImplementation 'org.mockito:mockito-all:1.9.5'
    testImplementation 'org.hamcrest:hamcrest-core:1.3'
    testImplementation group: 'org.slf4j', name: 'slf4j-simple', version: '1.6.2'


}

application {
    // Define the main class for the application.
    mainClassName = 'CI'
}
